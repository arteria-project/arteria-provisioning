#!/bin/bash
#set -e

rsafile="/home/stanley/.ssh/stanley_rsa"
remotehost="art-worker"

# or root todo
if [ "$(whoami)" != "stanley" ]; then
  echo "You must be stanley to run this script" >&2
  exit 1
fi

function generate_key {
    if [ ! -f "$rsafile" ]; then 
      echo "Creating $rsafile"
      ssh-keygen -P "" -f $rsafile -C stanley@st2server
    else
      echo "Keypair $rsafile already exists"
    fi 
}

function synch_public_key {
    cat "$rsafile.pub" | ssh stanley@$remotehost 'cat >> /home/stanley/.ssh/authorized_keys
    chmod 0700 /home/stanley/.ssh/
    chmod 0600 /home/stanley/.ssh/authorized_keys
    echo Key setup on remote host
    '
}

function validate {
    echo Validating the key using st2 configuration...

    configured_file=$(cat /etc/st2/st2.conf | grep ssh_key_file | awk '{ print $3 }')
    echo "Configured: $configured_file"
    echo "Expected:   $rsafile"
    if [ "$configured_file" != "$rsafile" ]; then
      echo Unexpected configured file
      exit 1
    fi
}

function connect {
    echo "Trying to connect to remote host $remotehost using $rsafile..."
    # note: not testing if the user will be able to sudo on the other end
    # also, not checking if the user is promted with password when running this
    output=$(ssh -oBatchMode=yes -i $rsafile stanley@$remotehost 'whoami')
    if [ "$?" != "0" ] || [ "$output" != "stanley" ]; then
        return 1
    fi
    return 0
}

function exit_if_already_setup {
    connect
    if [ "$?" == "0" ]; then
	echo "SSH keypair trust already established"
	exit 0
    fi
}

function validate_st2_remote {
    echo "Running st2 action core.remote"
    st2 run core.remote hosts="art-worker" username="stanley" -- uname | grep --quiet "succeeded\": true"
    if [ "$?" != "0" ]; then
        echo "Action core.remote exited with a non-null status"
        exit 1
    fi

    echo "Action core.remote executed successfully"
}

generate_key
exit_if_already_setup
synch_public_key
validate
connect
if [ "$?" == "1" ]; then
    echo "Not able to connect"
    exit 1
fi

validate_st2_remote
