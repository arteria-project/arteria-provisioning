---

# TODO Ensure all this is versioned!
# TODO: Investigate whether or not /usr/local/bin/ is in the path.
#       I get it, but not JD.

- name: install sisyphus dependencies from centos repository
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - epel-release
    - dos2unix
    - gnuplot
    - PyXML
    - ImageMagick
    - libxslt-devel
    - libxml2-devel
    - libxml2-devel
    - ncurses-devel
    - libtiff-devel
    - perl-XML-LibXML
    - perl-XML-LibXML-Common
    - perl-XML-NamespaceSupport
    - perl-XML-SAX
    - perl-XML-Simple
    - perl-Archive-Zip
    - perl-CPAN
    - git
  tags: siswrap

- name: install sisyphus dependencies from epel repository
  yum:
      name: "{{ item }}"
      state: present
      enablerepo: epel
  with_items:
    - perl-PDL
    - perl-PerlIO-gzip
  tags: siswrap

- name: download cpanm
  get_url: url=http://cpanmin.us dest=/tmp/cpanm_install.pl
  tags: siswrap

- name: install cpanm
  command: perl /tmp/cpanm_install.pl --sudo App::cpanminus
  tags: siswrap

- name: install File::NFSLock
  cpanm: name=File::NFSLock
  tags: siswrap

- name: create sisyphus code folder
  file: path={{ sisyphus_path }} state=directory
  tags: siswrap

- name: get sisyphus code
  git: repo={{ sisyphus_git_repo }} version={{ sisyphus_repo_branch }} dest={{ sisyphus_path }}/sisyphus-tmp
  tags: siswrap

- name: get sisyphus version
  command: git --git-dir={{ sisyphus_path }}/sisyphus-tmp/.git describe --tags
  register: sisyphus_version
  tags: siswrap

- name: check if latest sisyphus version folder exists
  stat: path={{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }}
  register: latest_sisyphus_version_folder
  tags: siswrap

- name: copy latest version to correct named folder
  command: cp -r {{ sisyphus_path }}/sisyphus-tmp {{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }}
  when: not latest_sisyphus_version_folder.stat.exists
  tags: siswrap

- name: remove sisyphus-tmp
  file: path={{ sisyphus_path }}/sisyphus-tmp state=absent
  tags: siswrap

- name: ensure latest version is globally readable
  file: state=directory path={{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }} mode=775 recurse=yes
  tags: siswrap

- name: setup link to sisyphus latest
  file: state=link src={{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }} dest={{ sisyphus_path }}/sisyphus-latest mode=775
  tags: siswrap

- name: set acl permissions on sisyphus code folder
  command: setfacl -R -m u:{{ arteria_user }}:rwx {{ sisyphus_path }}
  tags: siswrap

# qcValidateRun.pl looks for sisyphus_qc.xml in the runfolder, if not
# manually specified on the command line. QCWrapper will at the moment
# only try to copy /srv/qc_config/sisyphus_qc.xml into the runfolder.
# So for now we copy the QC criteria from Sisyphus into the qc_config
# folder. This might be done in some other way in the future.
- name: create /srv/qc_config folder
  file: path=/srv/qc_config state=directory
  tags: siswrap

- name: Deploy Sisyphus quality control config
  file: state=link src={{ sisyphus_path }}/sisyphus-latest/sisyphus_qc.xml dest=/srv/qc_config/sisyphus_qc.xml
  tags: siswrap

- name: get arteria-siswrap from github
  git:
    repo: https://github.com/arteria-project/arteria-siswrap.git
    dest: /usr/src/arteria-siswrap

- name: install arteria-siswrap requirements
  pip:
      requirements: /usr/src/arteria-siswrap/requirements/dev
      chdir: /usr/src/arteria-siswrap
      virtualenv: /opt/arteria/arteria-siswrap-env/
      virtualenv_command: /usr/local/bin/virtualenv
      state: present
      executable: /opt/arteria/arteria-siswrap-env/bin/pip
      extra_args: "--no-cache-dir"
      # FIXME: Sometimes the md5 checksum fails, seems to be fixed by removing
      # ~root/.cache/pip. According to docs "--no-cache-dir" should make pip
      # ignore this cache, but it doesn't seem to work via Ansible?

# Install into virtualenv.
- name: install arteria-siswrap
  pip:
      name: .
      chdir: /usr/src/arteria-siswrap
      virtualenv: /opt/arteria/arteria-siswrap-env/
      virtualenv_command: /usr/local/bin/virtualenv
      state: present
      executable: /opt/arteria/arteria-siswrap-env/bin/pip

- name: deploying arteria-siswrap config
  template:
    src: siswrap.config.j2
    dest: "{{ arteria_siswrap_config }}"

- name: deploy arteria-siswrap supervisord config
  template:
    src: supervisor_arteria_siswrap.conf.j2
    dest: /etc/supervisor/conf.d/siswrap.conf

- supervisorctl:
    name: siswrap-ws
    state: restarted
    supervisorctl_path: /usr/local/bin/supervisorctl
